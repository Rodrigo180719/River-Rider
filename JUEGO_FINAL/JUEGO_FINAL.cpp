// JUEGO_FINAL.cpp : main project file.

#include "stdafx.h"
#include "conio.h"
#include "windows.h"
#include "iostream"
#define FILAS 36
#define COLUMNAS 70 
#define IZQUIERDA 75 
#define DERECHA  77
#define ARRIBA 72
#define ABAJO 80 
#define YCENTRO 34 
#define XCENTRO 18 
#define xrev 35 
#define yrev 34 

int mapa_juego[FILAS][COLUMNAS];

using namespace System;
using namespace std;

void color(int color)
{
	if (color == 'azul'){ Console::ForegroundColor = ConsoleColor::Blue; }
	if (color == 'rojo'){ Console::ForegroundColor = ConsoleColor::Red; }
	if (color == 'cyan'){ Console::ForegroundColor = ConsoleColor::Cyan; }
	if (color == 'amar'){ Console::ForegroundColor = ConsoleColor::Yellow; }
	if (color == 'negr'){ Console::ForegroundColor = ConsoleColor::Black; }
	if (color == 'blan'){ Console::ForegroundColor = ConsoleColor::White; }
	if (color == 'plom'){ Console::ForegroundColor = ConsoleColor::Gray; }
	if (color == 'oplo'){ Console::ForegroundColor = ConsoleColor::DarkGray; }
	if (color == 'verd'){ Console::ForegroundColor = ConsoleColor::DarkGreen; }
	if (color == 'mage'){ Console::ForegroundColor = ConsoleColor::Magenta; }
	if (color == 'droj'){ Console::ForegroundColor = ConsoleColor::DarkRed; }
	if (color == 'dcya'){ Console::ForegroundColor = ConsoleColor::DarkCyan; }
}
void ubica(int x, int y)
{
	Console::SetCursorPosition(x, y);
}

int corazones = 3;
bool gameover = false;
int puntosXvidas = 1000;
//diseños
void borrarenemigo(int x_enemigoT, int y_enemigoT)
{
	color('azul');
	ubica(x_enemigoT, y_enemigoT); cout << char(219);
}
void enemigo(int x_enemigoT, int y_enemigoT)
{
	color('rojo');

	Console::BackgroundColor = ConsoleColor::Blue;
	ubica(x_enemigoT, y_enemigoT); cout << (char)203;
	Console::BackgroundColor = ConsoleColor::Black;
}
void enemigoA(int x_enemigoT, int y_enemigoT)
{
	color('rojo');

	Console::BackgroundColor = ConsoleColor::Blue;
	ubica(x_enemigoT, y_enemigoT); cout << (char)202;
	Console::BackgroundColor = ConsoleColor::Black;
}
void nave(int x_nave, int y_nave)
{
	color('amar');
	Console::BackgroundColor = ConsoleColor::Blue;
	ubica(x_nave, y_nave); cout << (char)30;
	Console::BackgroundColor = ConsoleColor::Black;
}
void borrar_nave(int x_nave, int y_nave)
{
	color('azul');
	ubica(x_nave, y_nave); cout << char(219);
}
void explosion(int x_nave, int  y_nave)
{
	Console::BackgroundColor = ConsoleColor::Blue;
	color('amar');
	ubica(x_nave, y_nave); cout << char(15);
	color('rojo');
	ubica(x_nave - 1, y_nave - 1); cout << "*";
	ubica(x_nave, y_nave - 1); cout << "*";
	ubica(x_nave + 1, y_nave - 1); cout << "*";
	ubica(x_nave + 1, y_nave); cout << "*";
	ubica(x_nave - 1, y_nave); cout << "*";
	ubica(x_nave - 1, y_nave + 1); cout << "*";
	ubica(x_nave, y_nave + 1); cout << "*";
	ubica(x_nave + 1, y_nave + 1); cout << "*";
	Console::BackgroundColor = ConsoleColor::Black;
}

void bala(int x_bala, int y_bala)
{
	color('rojo');
	Console::BackgroundColor = ConsoleColor::Blue;
	ubica(x_bala, y_bala); cout << (char)207;
	Console::BackgroundColor = ConsoleColor::Black;
}
void borrarbala(int x_bala, int y_bala)
{
	color('azul');
	ubica(x_bala, y_bala); cout << char(219);
}
// regenerar
void regenerar_punto(int x_bala, int y_bala, int n[FILAS][COLUMNAS], int suma)
{
	if (n[y_bala + suma][x_bala] == 5)
	{
		color('azul');
		ubica(x_bala, y_bala + suma); cout << (char)219;
	}
	if (n[y_bala + suma][x_bala] == 2)
	{
		color('amar');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala, y_bala + suma); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala + suma][x_bala] == 3)
	{
		color('dplo');

		ubica(x_bala, y_bala + suma); cout << (char)219;

	}

	if (n[y_bala + suma][x_bala] == 1)
	{
		color('verd');
		Console::BackgroundColor = ConsoleColor::DarkGreen;
		ubica(x_bala, y_bala + suma); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala + suma][x_bala] == 6)
	{
		color('verd');
		Console::BackgroundColor = ConsoleColor::DarkGreen;
		ubica(x_bala, y_bala + suma); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala + suma][x_bala] == 8)
	{
		color('rojo');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala, y_bala + suma); cout << (char)3;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala + suma][x_bala] == 0)
	{
		color('amar');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala, y_bala + suma); cout << (char)169;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	//HORIZONTAL
	if (n[y_bala][x_bala + suma] == 5)
	{
		color('azul');
		ubica(x_bala + suma, y_bala); cout << (char)219;
	}
	if (n[y_bala][x_bala + suma] == 2)
	{
		color('amar');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala + suma, y_bala); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala][x_bala + suma] == 3)
	{
		color('dplo');

		ubica(x_bala + suma, y_bala); cout << (char)219;

	}

	if (n[y_bala][x_bala + suma] == 1)
	{
		color('verd');
		Console::BackgroundColor = ConsoleColor::DarkGreen;
		ubica(x_bala + suma, y_bala); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala][x_bala + suma] == 6)
	{
		color('verd');
		Console::BackgroundColor = ConsoleColor::DarkGreen;
		ubica(x_bala + suma, y_bala); cout << (char)219;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala][x_bala + suma] == 8)
	{
		color('rojo');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala + suma, y_bala); cout << (char)3;
		Console::BackgroundColor = ConsoleColor::Black;
	}
	if (n[y_bala][x_bala + suma] == 0)
	{
		color('amar');
		Console::BackgroundColor = ConsoleColor::Blue;
		ubica(x_bala + suma, y_bala); cout << (char)169;
		Console::BackgroundColor = ConsoleColor::Black;
	}
}
void revivir(int &x_nave, int &y_nave, int x_rev, int y_rev)
{
	x_nave = x_rev;
	y_nave = y_rev;

	ubica(x_nave, y_nave);
	nave(x_nave, y_nave);
}

//colision  AB;A;D;I
void colision_bala(int x_bala, int y_bala, int &x_nave, int &y_nave, int x_rev, int y_rev, bool &disparar, bool &activador, int m[FILAS][COLUMNAS])
{
	if (x_nave == x_bala && y_nave == y_bala)
	{
		borrar_nave(x_nave, y_nave);
		corazones--;
		disparar = false;
		activador = true;
		if (corazones > 0)
		{
			regenerar_punto(x_nave, y_nave, m, 0);
			revivir(x_nave, y_nave, x_rev, y_rev);
		}
	}
}
void colision_enemigo(int x_enemigo, int y_enemigo, int &x_nave, int &y_nave, int x_rev, int y_rev)
{
	if (x_nave == x_enemigo && y_nave == y_enemigo)
	{
		borrar_nave(x_nave, y_nave);
		corazones--;
		if (corazones > 0)
		{
			revivir(x_nave, y_nave, x_rev, y_rev);
		}
	}
}
void posicion_x_bala(int &x_bala, int &y_bala, bool activador, int balas_enemigo, int x_nave)
{
	Random r;

	if (activador == true && balas_enemigo > 0)
	{
		if (x_nave >= 4 && x_nave <= 24){ x_bala = r.Next(4, 25); }
		if (x_nave >= 25 && x_nave <= 46){ x_bala = r.Next(25, 47); }
		if (x_nave >= 47 && x_nave <= 66){ x_bala = r.Next(47, 67); }
		y_bala = 0;
	}

}
//mensajes
void mensajecorazones(bool &mensaje)
{
	mensaje = true;
	color('rojo');
	ubica(41, 35);
	Console::BackgroundColor = ConsoleColor::DarkGreen;
	cout << "GENIAL! +1 Corazon";
	Console::BackgroundColor = ConsoleColor::Black;
}
void corazonesllenos(bool &mensaje)
{
	mensaje = true;
	color('rojo');
	ubica(41, 35);
	Console::BackgroundColor = ConsoleColor::DarkGreen;

	cout << "VIDA COMPLETA              ";
	Console::BackgroundColor = ConsoleColor::Black;

}

//mapas

int mapa1[FILAS][COLUMNAS] = {
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 8, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 8, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 1, 1, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },

};

int mapa2[FILAS][COLUMNAS] = {
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 1, 1, 5, 0, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 8, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
};
int mapa3[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
};

int mapa4[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 8, 5, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },

};
int mapa5[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },

};
int mapa6[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 5, 1, 1, 5, 5, 5, 5, 1, 1, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 1, 1, 1, 1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1, 1, 1, 1, 5, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 1, 1, 1, 1, 8, 5, 1, 5, 5, 5, 5, 1, 5, 8, 1, 1, 1, 1, 5, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 5, 1, 1, 5, 5, 5, 5, 1, 1, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
};
int mapa7[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 8, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 1, 1, 1, 1, 1, 1, 5, 0, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
};
int mapa8[FILAS][COLUMNAS] =
{
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1, 1, 1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1 },
	{ 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1 },
	{ 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0, 5, 5, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
};

void colormapa(int mapa[FILAS][COLUMNAS])
{
	//imprimir la matriz
	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{

			Console::SetCursorPosition(c, f);

			if (mapa[f][c] == 5 || mapa[f][c] == 7)  { color('azul'); cout << (char)219; }
			if (mapa[f][c] == 1 || mapa[f][c] == 6) { color('verd'); cout << (char)219; }
			if (mapa[f][c] == 2) { color('amar'); cout << (char)219; }
			if (mapa[f][c] == 3) { color('dplo'); cout << (char)219; }
			if (mapa[f][c] == 8) { color('rojo'); Console::BackgroundColor = ConsoleColor::Blue; cout << (char)3; Console::BackgroundColor = ConsoleColor::Black;; }
			if (mapa[f][c] == 0) { color('amar'); Console::BackgroundColor = ConsoleColor::Blue; cout << (char)169; Console::BackgroundColor = ConsoleColor::Black; }
			if (mapa[f][c] == 9 || mapa[f][c] == 10 || mapa[f][c] == 11 || mapa[f][c] == 12)  { color('azul'); cout << (char)219; }

		}
		if (f != FILAS - 1)
			cout << "\n";
	}
}
void vidas(int &vida, bool &gameover)
{
	ubica(1, 33); color('negr');
	Console::BackgroundColor = ConsoleColor::DarkGreen;
	cout << "VIDAS: ";
	if (vida >= 3)
		cout << (char)219 << " " << (char)219 << " " << (char)219;
	if (vida == 2)
		cout << (char)219 << " " << (char)219 << "  ";
	if (vida == 1)
		cout << (char)219 << "  " << "  ";
	if (vida == 0)
	{
		cout << "  " << "  " << "  ";
		gameover = true;
	}
	Console::BackgroundColor = ConsoleColor::Black;
}
void Cpuntos(int puntaje)
{
	color('rojo');
	Console::BackgroundColor = ConsoleColor::DarkGreen;
	ubica(1, 35);
	cout << "Puntaje:" << puntaje;
	Console::BackgroundColor = ConsoleColor::Black;
}
void puntos_vidas(int puntaje, int &corazones, bool &mensaje, int mapa)
{
	if (puntaje - puntosXvidas >= 0 && puntaje != 0)
	{
		if (corazones < 3)
		{
			Console::BackgroundColor = ConsoleColor::DarkGreen;
			ubica(41, 35); cout << puntosXvidas << " +1 VIDA              ";
			corazones++;
			mensaje = true;
			puntosXvidas += 1000;
			Console::BackgroundColor = ConsoleColor::Black;
		}
		else
		{
			puntosXvidas += 1000;
		}
	}
}

void recoge_puntos(int &puntaje, bool &mensaje, int &x_nave, int &y_nave, int nivel[FILAS][COLUMNAS], int mapa, int valor)
{
	if (nivel[y_nave][x_nave] == 0)
	{
		puntaje += valor;
		Cpuntos(puntaje);
		puntos_vidas(puntaje, corazones, mensaje, mapa);
		nivel[y_nave][x_nave] = 5;
	}
	if (nivel[y_nave][x_nave - 1] == 0)
	{
		puntaje += valor;
		Cpuntos(puntaje);
		puntos_vidas(puntaje, corazones, mensaje, mapa);
		nivel[y_nave][x_nave - 1] = 5;
	}
	if (nivel[y_nave][x_nave + 1] == 0)
	{
		puntaje += valor;
		Cpuntos(puntaje);
		puntos_vidas(puntaje, corazones, mensaje, mapa);
		nivel[y_nave][x_nave + 1] = 5;
	}

}
void recoge_corazones(int &puntaje, bool &mensaje, int &x_nave, int &y_nave, int nivel[FILAS][COLUMNAS])
{
	if (nivel[y_nave][x_nave] == 8)
	{
		if (corazones < 3)
		{
			corazones++;
			mensajecorazones(mensaje);
			nivel[y_nave][x_nave] = 5;
		}
		else { corazonesllenos(mensaje); nivel[y_nave][x_nave] = 5; }
	}
}

void MiBala(int xBala, int yBala)
{
	Console::BackgroundColor = ConsoleColor::Blue;
	color('plom');
	ubica(xBala, yBala); cout << "*";
	Console::BackgroundColor = ConsoleColor::Black;
}
void BorrarMiBala(int xBala, int yBala)
{
	color('azul');
	ubica(xBala, yBala); cout << char(219);
}
void Disparo(int &xBala, int &yBala, bool &disparar_j, int &aumento, int nivel[FILAS][COLUMNAS], int y)
{
	if (aumento == 100)
	{
		if (disparar_j)
		{
			BorrarMiBala(xBala, yBala);
			yBala--;
			MiBala(xBala, yBala);
			regenerar_punto(xBala, yBala, nivel, 1);
		}
		aumento = 0;
	}

	if (yBala == 1)
	{
		BorrarMiBala(xBala, yBala);
		regenerar_punto(xBala, yBala, nivel, 0);
		yBala = y;
		disparar_j = false;
	}

	aumento++;
}

void J_NIVEL_8()
{
	Random r;
	int x_nave = 45, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_3 = false, activador_3 = true;
	bool disparar_j = false;
	int puntaje = 0, contador_aviso = 0;
	//enemigos en tierra
	int contador1 = 0;
	bool enemigo1 = true, enemigo2 = true;
	int contador3 = 0;

	int x1 = 34, y1 = 4, d1 = 1;

	int x3 = 34, y3 = 22, d3 = 1;


	//balas
	int balas_enemigo_1 = 12;

	int balas_enemigo_3 = 12;
	int x_bala_1, y_bala_1, x_bala_3, y_bala_3;

	color('rojo');
	x_bala_1 = r.Next(5, 66);

	x_bala_3 = r.Next(5, 66);


	colormapa(mapa8);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);
	//imprimir enemigos
	enemigo(x1, y1);

	enemigo(x3, y3);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 17 || x1 == 56){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa8, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, 45, yrev, disparar_1, activador_1, mapa8);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa8, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, 45, yrev); }
		//enemigo2.3
		if (contador3 == 90 && enemigo2 == true)
		{
			if (x3 == 10 || x3 == 62){ d3 *= -1; }

			borrarenemigo(x3, y3);
			x3 += d3;
			enemigo(x3, y3);
			contador3 = 0;

			if (x_bala_3 == x3 && activador_3 == true)
			{
				activador_3 = false;
				y_bala_3 = y3 + 2;
				bala(x_bala_3, y_bala_3);
				disparar_3 = true;
				balas_enemigo_3--;
			}

			if (disparar_3 == true)
			{
				borrarbala(x_bala_3, y_bala_3);
				y_bala_3++;
				bala(x_bala_3, y_bala_3);
				regenerar_punto(x_bala_3, y_bala_3, mapa8, -1);
				colision_bala(x_bala_3, y_bala_3, x_nave, y_nave, 45, yrev, disparar_3, activador_3, mapa8);

				if (y_bala_3 == 35)
				{
					borrarbala(x_bala_3, y_bala_3);
					regenerar_punto(x_bala_3, y_bala_3, mapa8, 0);
					disparar_3 = false;
					activador_3 = true;
				}
			}
		}

		if (enemigo2 == true) { colision_enemigo(x3, y3, x_nave, y_nave, 45, yrev); }

		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa8[y_nave - 1][x_nave] != 1 && mapa8[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa8[y_nave + 1][x_nave] != 1 && mapa8[y_nave + 1][x_nave] != 7 && mapa8[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa8[y_nave][x_nave - 1] != 1 && mapa8[y_nave][x_nave - 1] != 2 && mapa8[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa8[y_nave][x_nave + 1] != 1 && mapa8[y_nave][x_nave + 1] != 2 && mapa8[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, 45, yrev, disparar_1, activador_1, mapa8);
			colision_bala(x_bala_3, y_bala_3, x_nave, y_nave, 45, yrev, disparar_3, activador_3, mapa8);
			if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, 45, yrev); }
			if (enemigo2 == true) { colision_enemigo(x3, y3, x_nave, y_nave, 45, yrev); }
		}
		if (mapa8[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 20250)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			break;
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_3, y_bala_3, activador_3, balas_enemigo_3, x_nave);

		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa8, mapa, 450);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa8);

		//Contadores
		contador1++;
		contador3++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa8, y_nave);
			if (x_miBala == x3 && y_miBala == y3){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_7()
{
	Random r;
	int x_nave = 45, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int puntaje = 0, contador_aviso = 0;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true;
	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;

	int x1 = 34, y1 = 8, d1 = 1;
	int x2 = 34, y2 = 21, d2 = -1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;

	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa7);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);

	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 14 || x1 == 54){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa7, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, 45, yrev, disparar_1, activador_1, mapa7);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa7, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, 45, yrev); }

		//Enemigo 2
		if (contador2 == 70 && enemigo2 == true)
		{
			if (x2 == 14 || x2 == 54){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigo(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 + 2;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2++;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa7, -1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, 45, yrev, disparar_2, activador_2, mapa7);

				if (y_bala_2 == 35)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa7, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, 45, yrev); }

		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa7[y_nave - 1][x_nave] != 1 && mapa7[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa7[y_nave + 1][x_nave] != 1 && mapa7[y_nave + 1][x_nave] != 7 && mapa7[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa7[y_nave][x_nave - 1] != 1 && mapa7[y_nave][x_nave - 1] != 2 && mapa7[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa7[y_nave][x_nave + 1] != 1 && mapa7[y_nave][x_nave + 1] != 2 && mapa7[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, 45, yrev, disparar_1, activador_1, mapa7);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, 45, yrev, disparar_2, activador_2, mapa7);

			if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, 45, yrev); }
			if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, 45, yrev); }

		}
		if (mapa7[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 9600)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			J_NIVEL_8();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}

		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);


		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa7, mapa, 400);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa7);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa7, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_6()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true;

	int puntaje = 0, contador_aviso = 0;
	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;

	int x1 = 35, y1 = 3, d1 = 1;
	int x2 = 35, y2 = 15, d2 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;

	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;
	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa6);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);

	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 30 || x1 == 39){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa6, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa6);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa6, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 23 || x2 == 46){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigo(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 + 2;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2++;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa6, -1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa6);

				if (y_bala_2 == 35)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa6, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa6[y_nave - 1][x_nave] != 1 && mapa6[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa6[y_nave + 1][x_nave] != 1 && mapa6[y_nave + 1][x_nave] != 7 && mapa6[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa6[y_nave][x_nave - 1] != 1 && mapa6[y_nave][x_nave - 1] != 2 && mapa6[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa6[y_nave][x_nave + 1] != 1 && mapa6[y_nave][x_nave + 1] != 2 && mapa6[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa6);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa6);

			if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		}
		if (mapa6[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 3500)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			J_NIVEL_7();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);

		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa6, mapa, 350);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa6);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa6, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_5()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true;

	int puntaje = 0, contador_aviso = 0;
	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;

	int x1 = 35, y1 = 7, d1 = 1;
	int x2 = 34, y2 = 28, d2 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;

	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa5);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);
	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 10 || x1 == 59){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa5, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa5);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa5, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 30 || x2 == 39){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigo(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 + 2;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2++;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa5, -1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa5);

				if (y_bala_2 == 35)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa5, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }


		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa5[y_nave - 1][x_nave] != 1 && mapa5[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa5[y_nave + 1][x_nave] != 1 && mapa5[y_nave + 1][x_nave] != 7 && mapa5[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa5[y_nave][x_nave - 1] != 1 && mapa5[y_nave][x_nave - 1] != 2 && mapa5[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa5[y_nave][x_nave + 1] != 1 && mapa5[y_nave][x_nave + 1] != 2 && mapa5[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa5);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa5);

			if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		}
		if (mapa5[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 3000)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			J_NIVEL_6();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);


		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa5, mapa, 300);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa5);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa5, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_4()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true;

	int puntaje = 0, contador_aviso = 0;
	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;
	int x1 = 35, y1 = 2, d1 = 1;
	int x2 = 35, y2 = 10, d2 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;
	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa4);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);
	//imprimir enemigos
	enemigo(x1, y1);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 80 && enemigo1 == true)
		{
			if (x1 == 28 || x1 == 41){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa4, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa4);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa4, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 8 || x2 == 61){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigo(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 + 1;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2++;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa4, -1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa4);

				if (y_bala_2 == 35)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa4, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa4[y_nave - 1][x_nave] != 1 && mapa4[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa4[y_nave + 1][x_nave] != 1 && mapa4[y_nave + 1][x_nave] != 7 && mapa4[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa4[y_nave][x_nave - 1] != 1 && mapa4[y_nave][x_nave - 1] != 2 && mapa4[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa4[y_nave][x_nave + 1] != 1 && mapa4[y_nave][x_nave + 1] != 2 && mapa4[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa4);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa3);

			if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		}
		if (mapa4[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && (puntaje == 2250 || puntaje == 2500))
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear();
			J_NIVEL_5();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);

		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa4, mapa, 250);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa4);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa4, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_3()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int puntaje = 0, contador_aviso = 0;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true, enemigo3 = true;

	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;
	int contador3 = 0;

	int x1 = 35, y1 = 3, d1 = 1;
	int x2 = 36, y2 = 28, d2 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;

	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa3);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);

	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 29 || x1 == 38){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 1;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa3, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa3);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa3, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 35 || x2 == 45){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigoA(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 - 1;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2--;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa3, 1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa3);

				if (y_bala_2 == 1)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa3, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }
		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa3[y_nave - 1][x_nave] != 1 && mapa3[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa3[y_nave + 1][x_nave] != 1 && mapa3[y_nave + 1][x_nave] != 7 && mapa3[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa3[y_nave][x_nave - 1] != 1 && mapa3[y_nave][x_nave - 1] != 2 && mapa3[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa3[y_nave][x_nave + 1] != 1 && mapa3[y_nave][x_nave + 1] != 2 && mapa3[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa3);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa3);

			if (enemigo1 == true){ colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		}
		if (mapa3[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 2000)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear();
			J_NIVEL_4();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);


		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa3, mapa, 200);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa3);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa3, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_2()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true;

	int puntaje = 0, contador_aviso = 0;

	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;

	int x1 = 33, y1 = 4, d1 = 1;
	int x2 = 34, y2 = 31, d2 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;

	int x_bala_1, y_bala_1, x_bala_2, y_bala_2;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);

	colormapa(mapa2);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);
	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 28 || x1 == 41){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 1;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa2, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa2);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa2, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 28 || x2 == 41){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigoA(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 - 1;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2--;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2--;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa2, 1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa2);

				if (y_bala_2 == 1)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa2, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true){ colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }


		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa2[y_nave - 1][x_nave] != 1 && mapa2[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa2[y_nave + 1][x_nave] != 1 && mapa2[y_nave + 1][x_nave] != 7 && mapa2[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa2[y_nave][x_nave - 1] != 1 && mapa2[y_nave][x_nave - 1] != 2 && mapa2[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa2[y_nave][x_nave + 1] != 1 && mapa2[y_nave][x_nave + 1] != 2 && mapa2[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa2);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa2);

			if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true) { colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }

		}
		if (mapa2[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 1500)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			J_NIVEL_3();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);

		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa2, mapa, 150);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa2);

		//Contadores
		contador1++;
		contador2++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa2, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
		}

	}//fin while
}
void J_NIVEL_1()
{
	Random r;
	int x_nave = 35, y_nave = 34, direccion = ARRIBA, mapa = 1, x_centro = XCENTRO, y_centro = YCENTRO;
	bool mensaje = false, disparar_1 = false, activador_1 = true;
	bool disparar_2 = false, activador_2 = true;
	bool disparar_3 = false, activador_3 = true;
	int puntaje = 0, contador_aviso = 0;
	int x_miBala = x_nave, y_miBala = y_nave, aumento_bala = 0;
	bool disparar_j = false, enemigo1 = true, enemigo2 = true, enemigo3 = true;
	//enemigos en tierra
	int contador1 = 0;
	int contador2 = 0;
	int contador3 = 0;

	int x1 = 17, y1 = 19, d1 = 1;
	int x2 = 50, y2 = 19, d2 = 1;
	int x3 = 33, y3 = 5, d3 = 1;

	//balas
	int balas_enemigo_1 = 12;
	int balas_enemigo_2 = 12;
	int balas_enemigo_3 = 12;
	int x_bala_1, y_bala_1, x_bala_2, y_bala_2, x_bala_3, y_bala_3;

	color('rojo');
	x_bala_1 = r.Next(5, 66);
	x_bala_2 = r.Next(5, 66);
	x_bala_3 = r.Next(5, 66);


	colormapa(mapa1);
	Cpuntos(puntaje);
	nave(x_nave, y_nave);
	//imprimir enemigos
	enemigo(x1, y1);
	enemigo(x2, y2);
	enemigo(x3, y3);

	while (1)
	{
		if (vidas == 0)
		{
			gameover = true;
		}

		vidas(corazones, gameover);

		//Enemigo 1
		if (contador1 == 90 && enemigo1 == true)
		{
			if (x1 == 16 || x1 == 22){ d1 *= -1; }

			borrarenemigo(x1, y1);
			x1 += d1;
			enemigo(x1, y1);
			contador1 = 0;

			if (x_bala_1 == x1 && activador_1 == true)
			{
				activador_1 = false;
				y_bala_1 = y1 + 2;
				bala(x_bala_1, y_bala_1);
				disparar_1 = true;
				balas_enemigo_1--;
			}

			if (disparar_1 == true)
			{
				borrarbala(x_bala_1, y_bala_1);
				y_bala_1++;
				bala(x_bala_1, y_bala_1);
				regenerar_punto(x_bala_1, y_bala_1, mapa1, -1);
				colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa1);

				if (y_bala_1 == 35)
				{
					borrarbala(x_bala_1, y_bala_1);
					regenerar_punto(x_bala_1, y_bala_1, mapa1, 0);
					disparar_1 = false;
					activador_1 = true;
				}
			}
		}

		if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }

		//Enemigo 2
		if (contador2 == 90 && enemigo2 == true)
		{
			if (x2 == 47 || x2 == 53){ d2 *= -1; }

			borrarenemigo(x2, y2);
			x2 += d2;
			enemigo(x2, y2);
			contador2 = 0;

			if (x_bala_2 == x2 && activador_2 == true)
			{
				activador_2 = false;
				y_bala_2 = y2 + 2;
				bala(x_bala_2, y_bala_2);
				disparar_2 = true;
				balas_enemigo_2++;
			}

			if (disparar_2 == true)
			{
				borrarbala(x_bala_2, y_bala_2);
				y_bala_2++;
				bala(x_bala_2, y_bala_2);
				regenerar_punto(x_bala_2, y_bala_2, mapa1, -1);
				colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa1);

				if (y_bala_2 == 35)
				{
					borrarbala(x_bala_2, y_bala_2);
					regenerar_punto(x_bala_2, y_bala_2, mapa1, 0);
					disparar_2 = false;
					activador_2 = true;
				}
			}
		}

		if (enemigo2 == true) { colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }
		//enemigo3
		if (contador3 == 90 && enemigo3 == true)
		{
			if (x3 == 27 || x3 == 42){ d3 *= -1; }

			borrarenemigo(x3, y3);
			x3 += d3;
			enemigo(x3, y3);
			contador3 = 0;

			if (x_bala_3 == x3 && activador_3 == true)
			{
				activador_3 = false;
				y_bala_3 = y3 + 2;
				bala(x_bala_3, y_bala_3);
				disparar_3 = true;
				balas_enemigo_3++;
			}

			if (disparar_3 == true)
			{
				borrarbala(x_bala_3, y_bala_3);
				y_bala_3++;
				bala(x_bala_3, y_bala_3);
				regenerar_punto(x_bala_3, y_bala_3, mapa1, -1);
				colision_bala(x_bala_3, y_bala_3, x_nave, y_nave, xrev, yrev, disparar_3, activador_3, mapa1);

				if (y_bala_3 == 35)
				{
					borrarbala(x_bala_3, y_bala_3);
					regenerar_punto(x_bala_3, y_bala_3, mapa1, 0);
					disparar_3 = false;
					activador_3 = true;
				}
			}
		}

		if (enemigo3 == true) { colision_enemigo(x3, y3, x_nave, y_nave, xrev, yrev); }

		//GAMEOVER
		if (gameover == true)
		{
			gameover = false;
			explosion(x_nave, y_nave);
			corazones = 3;
			Console::Clear();
			break;
		}

		//Movimiento nave
		if (kbhit())
		{
			int  tecla = getch();

			if (tecla == ARRIBA && mapa1[y_nave - 1][x_nave] != 1 && mapa1[y_nave - 1][x_nave] != 7)
			{
				borrar_nave(x_nave, y_nave);
				y_nave--;
				nave(x_nave, y_nave);
				direccion = ARRIBA;
			}
			if (tecla == ABAJO && mapa1[y_nave + 1][x_nave] != 1 && mapa1[y_nave + 1][x_nave] != 7 && mapa1[y_nave + 1][x_nave] != 3)
			{
				borrar_nave(x_nave, y_nave);
				y_nave++;
				nave(x_nave, y_nave);
				direccion = ABAJO;
			}
			if (tecla == IZQUIERDA&& mapa1[y_nave][x_nave - 1] != 1 && mapa1[y_nave][x_nave - 1] != 2 && mapa1[y_nave][x_nave - 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave--;
				nave(x_nave, y_nave);
				direccion = IZQUIERDA;
			}
			if (tecla == DERECHA && mapa1[y_nave][x_nave + 1] != 1 && mapa1[y_nave][x_nave + 1] != 2 && mapa1[y_nave][x_nave + 1] != 3)
			{
				borrar_nave(x_nave, y_nave);
				x_nave++;
				nave(x_nave, y_nave);
				direccion = DERECHA;
			}
			if (tecla == 32 && disparar_j == false)
			{
				disparar_j = true;
				x_miBala = x_nave; y_miBala = y_nave - 1;
			}

			colision_bala(x_bala_1, y_bala_1, x_nave, y_nave, xrev, yrev, disparar_1, activador_1, mapa1);
			colision_bala(x_bala_2, y_bala_2, x_nave, y_nave, xrev, yrev, disparar_2, activador_2, mapa1);
			colision_bala(x_bala_3, y_bala_3, x_nave, y_nave, xrev, yrev, disparar_3, activador_3, mapa1);
			if (enemigo1 == true) { colision_enemigo(x1, y1, x_nave, y_nave, xrev, yrev); }
			if (enemigo2 == true) { colision_enemigo(x2, y2, x_nave, y_nave, xrev, yrev); }
			if (enemigo3 == true) { colision_enemigo(x3, y3, x_nave, y_nave, xrev, yrev); }
		}
		if (mapa1[y_nave - 1][x_nave] == 7 && direccion == ARRIBA && puntaje == 1000)
		{
			borrar_nave(x_nave, y_nave);
			direccion = ARRIBA;
			Console::Clear;
			J_NIVEL_2();
			x_nave = xrev; y_nave = yrev;
			nave(x_nave, y_nave);
		}
		// Cordenadas de balas

		posicion_x_bala(x_bala_1, y_bala_1, activador_1, balas_enemigo_1, x_nave);
		posicion_x_bala(x_bala_2, y_bala_2, activador_2, balas_enemigo_2, x_nave);
		posicion_x_bala(x_bala_3, y_bala_3, activador_3, balas_enemigo_3, x_nave);

		//Recoger 
		recoge_puntos(puntaje, mensaje, x_nave, y_nave, mapa1, mapa, 100);
		recoge_corazones(puntaje, mensaje, x_nave, y_nave, mapa1);

		//Contadores
		contador1++;
		contador2++;
		contador3++;

		if (disparar_j == true)
		{
			Disparo(x_miBala, y_miBala, disparar_j, aumento_bala, mapa1, y_nave);
			if (x_miBala == x2 && y_miBala == y2){ enemigo2 = false; }
			else if (x_miBala == x1 && y_miBala == y1){ enemigo1 = false; }
			else if (x_miBala == x3 && y_miBala == y3){ enemigo3 = false; }
		}

	}//fin while
}



int main(array<System::String ^> ^args)
{
	Console::SetWindowSize(70, 35);
	Console::CursorVisible = false;
	J_NIVEL_1();
	return 0;
}
